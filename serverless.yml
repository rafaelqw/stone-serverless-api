service: stone-serverless-app
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}

  environment:
    DYNAMODB_USER_TABLE: ${self:service}-userTable-${sls:stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-userTable-${sls:stage}
  apiGateway:
    apiKeys:
      - StoneApiKey

functions:
  registerAccess:
    handler: src/functions/counter/registerAccess.handle
    timeout: 30
    events:
      - http:
          path: /access
          method: POST
          cors: true
  getAccesses:
    handler: src/functions/counter/getAccesses.handle
    timeout: 30
    events:
      - http:
          path: /accesses
          method: GET
          cors: true
  createUser:
    handler: src/shared/infra/lambdas/users.createUser
    timeout: 30
    events:
      - http:
          path: /user
          method: POST
          cors: true
          private: true
  getUsers:
    handler: src/shared/infra/lambdas/users.getUserById
    timeout: 30
    events:
      - http:
          path: /user/{id}
          method: GET
          cors: true
          private: true

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    serviceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-userTable-${sls:stage}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
